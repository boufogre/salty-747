{"code":"import { __awaiter } from \"tslib\";\r\n/**\r\n * Methods for interacting with the FS9GPS subsystem.\r\n */\r\nexport class GPS {\r\n    /**\r\n     * Clears the FS9GPS flight plan.\r\n     */\r\n    static clearPlan() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const totalGpsWaypoints = SimVar.GetSimVarValue('C:fs9gps:FlightPlanWaypointsNumber', 'number');\r\n            for (let i = 0; i < totalGpsWaypoints; i++) {\r\n                //Always remove waypoint 0 here, which shifts the rest of the waypoints down one\r\n                yield GPS.deleteWaypoint(0);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Adds a waypoint to the FS9GPS flight plan by ICAO designation.\r\n     * @param icao The MSFS ICAO to add to the flight plan.\r\n     * @param index The index of the waypoint to add in the flight plan.\r\n     */\r\n    static addIcaoWaypoint(icao, index) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield SimVar.SetSimVarValue('C:fs9gps:FlightPlanNewWaypointICAO', 'string', icao);\r\n            yield SimVar.SetSimVarValue('C:fs9gps:FlightPlanAddWaypoint', 'number', index);\r\n        });\r\n    }\r\n    /**\r\n     * Adds a user waypoint to the FS9GPS flight plan.\r\n     * @param lat The latitude of the user waypoint.\r\n     * @param lon The longitude of the user waypoint.\r\n     * @param index The index of the waypoint to add in the flight plan.\r\n     * @param ident The ident of the waypoint.\r\n     */\r\n    static addUserWaypoint(lat, lon, index, ident) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield SimVar.SetSimVarValue('C:fs9gps:FlightPlanNewWaypointLatitude', 'degrees', lat);\r\n            yield SimVar.SetSimVarValue('C:fs9gps:FlightPlanNewWaypointLongitude', 'degrees', lon);\r\n            if (ident) {\r\n                yield SimVar.SetSimVarValue('C:fs9gps:FlightPlanNewWaypointIdent', 'string', ident);\r\n            }\r\n            yield SimVar.SetSimVarValue('C:fs9gps:FlightPlanAddWaypoint', 'number', index);\r\n        });\r\n    }\r\n    /**\r\n     * Deletes a waypoint from the FS9GPS flight plan.\r\n     * @param index The index of the waypoint in the flight plan to delete.\r\n     */\r\n    static deleteWaypoint(index) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield SimVar.SetSimVarValue('C:fs9gps:FlightPlanDeleteWaypoint', 'number', index);\r\n        });\r\n    }\r\n    /**\r\n     * Sets the active FS9GPS waypoint.\r\n     * @param {Number} index The index of the waypoint to set active.\r\n     */\r\n    static setActiveWaypoint(index) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield SimVar.SetSimVarValue('C:fs9gps:FlightPlanActiveWaypoint', 'number', index);\r\n        });\r\n    }\r\n    /**\r\n     * Gets the active FS9GPS waypoint.\r\n     */\r\n    static getActiveWaypoint() {\r\n        return SimVar.GetSimVarValue('C:fs9gps:FlightPlanActiveWaypoint', 'number');\r\n    }\r\n    /**\r\n     * Logs the current FS9GPS flight plan.\r\n     */\r\n    static logCurrentPlan() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const waypointIdents = [];\r\n            const totalGpsWaypoints = SimVar.GetSimVarValue('C:fs9gps:FlightPlanWaypointsNumber', 'number');\r\n            for (let i = 0; i < totalGpsWaypoints; i++) {\r\n                yield SimVar.SetSimVarValue('C:fs9gps:FlightPlanWaypointIndex', 'number', i);\r\n                waypointIdents.push(SimVar.GetSimVarValue('C:fs9gps:FlightPlanWaypointIdent', 'string'));\r\n            }\r\n            console.log(`GPS Plan: ${waypointIdents.join(' ')}`);\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=GPS.js.map","references":[],"map":"{\"version\":3,\"file\":\"GPS.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/fpm/src/flightplanning/GPS.ts\"],\"names\":[],\"mappings\":\";AAAA;;GAEG;AACH,MAAM,OAAO,GAAG;IAEd;;OAEG;IACI,MAAM,CAAO,SAAS;;YAC3B,MAAM,iBAAiB,GAAG,MAAM,CAAC,cAAc,CAAC,oCAAoC,EAAE,QAAQ,CAAC,CAAC;YAChG,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,iBAAiB,EAAE,CAAC,EAAE,EAAE;gBAE1C,gFAAgF;gBAChF,MAAM,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;aAC7B;QACH,CAAC;KAAA;IAED;;;;OAIG;IACI,MAAM,CAAO,eAAe,CAAC,IAAY,EAAE,KAAa;;YAC7D,MAAM,MAAM,CAAC,cAAc,CAAC,oCAAoC,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;YAClF,MAAM,MAAM,CAAC,cAAc,CAAC,gCAAgC,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;QACjF,CAAC;KAAA;IAED;;;;;;OAMG;IACI,MAAM,CAAO,eAAe,CAAC,GAAW,EAAE,GAAW,EAAE,KAAa,EAAE,KAAa;;YACxF,MAAM,MAAM,CAAC,cAAc,CAAC,wCAAwC,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC;YACtF,MAAM,MAAM,CAAC,cAAc,CAAC,yCAAyC,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC;YAEvF,IAAI,KAAK,EAAE;gBACT,MAAM,MAAM,CAAC,cAAc,CAAC,qCAAqC,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;aACrF;YAED,MAAM,MAAM,CAAC,cAAc,CAAC,gCAAgC,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;QACjF,CAAC;KAAA;IAED;;;OAGG;IACI,MAAM,CAAO,cAAc,CAAC,KAAa;;YAC9C,MAAM,MAAM,CAAC,cAAc,CAAC,mCAAmC,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;QACpF,CAAC;KAAA;IAED;;;OAGG;IACI,MAAM,CAAO,iBAAiB,CAAC,KAAa;;YACjD,MAAM,MAAM,CAAC,cAAc,CAAC,mCAAmC,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;QACpF,CAAC;KAAA;IAED;;OAEG;IACI,MAAM,CAAC,iBAAiB;QAC7B,OAAO,MAAM,CAAC,cAAc,CAAC,mCAAmC,EAAE,QAAQ,CAAC,CAAC;IAC9E,CAAC;IAED;;OAEG;IACI,MAAM,CAAO,cAAc;;YAChC,MAAM,cAAc,GAAG,EAAE,CAAC;YAC1B,MAAM,iBAAiB,GAAG,MAAM,CAAC,cAAc,CAAC,oCAAoC,EAAE,QAAQ,CAAC,CAAC;YAEhG,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,iBAAiB,EAAE,CAAC,EAAE,EAAE;gBAC1C,MAAM,MAAM,CAAC,cAAc,CAAC,kCAAkC,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;gBAC7E,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,kCAAkC,EAAE,QAAQ,CAAC,CAAC,CAAC;aAC1F;YAED,OAAO,CAAC,GAAG,CAAC,aAAa,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QACvD,CAAC;KAAA;CACF\"}","dts":{"name":"D:/Documents/GitHub/boufogre/salty-747/src/fpm/dist/types/flightplanning/GPS.d.ts","writeByteOrderMark":false,"text":"/**\r\n * Methods for interacting with the FS9GPS subsystem.\r\n */\r\nexport declare class GPS {\r\n    /**\r\n     * Clears the FS9GPS flight plan.\r\n     */\r\n    static clearPlan(): Promise<void>;\r\n    /**\r\n     * Adds a waypoint to the FS9GPS flight plan by ICAO designation.\r\n     * @param icao The MSFS ICAO to add to the flight plan.\r\n     * @param index The index of the waypoint to add in the flight plan.\r\n     */\r\n    static addIcaoWaypoint(icao: string, index: number): Promise<void>;\r\n    /**\r\n     * Adds a user waypoint to the FS9GPS flight plan.\r\n     * @param lat The latitude of the user waypoint.\r\n     * @param lon The longitude of the user waypoint.\r\n     * @param index The index of the waypoint to add in the flight plan.\r\n     * @param ident The ident of the waypoint.\r\n     */\r\n    static addUserWaypoint(lat: number, lon: number, index: number, ident: string): Promise<void>;\r\n    /**\r\n     * Deletes a waypoint from the FS9GPS flight plan.\r\n     * @param index The index of the waypoint in the flight plan to delete.\r\n     */\r\n    static deleteWaypoint(index: number): Promise<void>;\r\n    /**\r\n     * Sets the active FS9GPS waypoint.\r\n     * @param {Number} index The index of the waypoint to set active.\r\n     */\r\n    static setActiveWaypoint(index: number): Promise<void>;\r\n    /**\r\n     * Gets the active FS9GPS waypoint.\r\n     */\r\n    static getActiveWaypoint(): number;\r\n    /**\r\n     * Logs the current FS9GPS flight plan.\r\n     */\r\n    static logCurrentPlan(): Promise<void>;\r\n}\r\n"}}
