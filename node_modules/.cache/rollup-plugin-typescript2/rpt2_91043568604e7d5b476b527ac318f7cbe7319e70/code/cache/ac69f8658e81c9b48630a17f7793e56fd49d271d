{"code":"import { __awaiter } from \"tslib\";\r\nimport { WaypointBuilder } from \"../../flightplanning/WaypointBuilder\";\r\nexport class CJ4_FMC_PilotWaypointParser {\r\n    static parseInput(value, referenceIndex, fmc) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const matchFullLatLong = value.match(CJ4_FMC_PilotWaypointParser.fullLatLong);\r\n            const matchShorhandLatLongEnd = value.match(CJ4_FMC_PilotWaypointParser.shorhandLatLongEnd);\r\n            const matchShorthandLatLongMid = value.match(CJ4_FMC_PilotWaypointParser.shorthandLatLongMid);\r\n            const matchPlaceBearingDistance = value.match(CJ4_FMC_PilotWaypointParser.placeBearingDistance);\r\n            const matchAlongTrackOffset = value.match(CJ4_FMC_PilotWaypointParser.alongTrackOffset);\r\n            let newWaypoint = undefined;\r\n            if (matchFullLatLong) {\r\n                newWaypoint = {\r\n                    wpt: CJ4_FMC_PilotWaypointParser.parseFullLatLong(matchFullLatLong, fmc),\r\n                    offset: 0\r\n                };\r\n            }\r\n            else if (matchShorhandLatLongEnd) {\r\n                newWaypoint = {\r\n                    wpt: CJ4_FMC_PilotWaypointParser.parseShorthandLatLongEnd(matchShorhandLatLongEnd, fmc),\r\n                    offset: 0\r\n                };\r\n            }\r\n            else if (matchShorthandLatLongMid) {\r\n                newWaypoint = {\r\n                    wpt: CJ4_FMC_PilotWaypointParser.parseShorthandLatLongMid(matchShorthandLatLongMid, fmc),\r\n                    offset: 0\r\n                };\r\n            }\r\n            else if (matchPlaceBearingDistance) {\r\n                const placeBearingWaypoint = yield CJ4_FMC_PilotWaypointParser.parsePlaceBearingDistance(matchPlaceBearingDistance, fmc);\r\n                if (placeBearingWaypoint) {\r\n                    newWaypoint = {\r\n                        wpt: placeBearingWaypoint,\r\n                        offset: 0\r\n                    };\r\n                }\r\n            }\r\n            else if (matchAlongTrackOffset) {\r\n                // 1 = Reference Ident\r\n                // 2 = Distance from Reference\r\n                // 3 = Ident\r\n                referenceIndex = fmc.flightPlanManager.getAllWaypoints().findIndex(x => x.ident === matchAlongTrackOffset[1]);\r\n                if (referenceIndex > -1) {\r\n                    const ident = CJ4_FMC_PilotWaypointParser.procMatch(matchAlongTrackOffset[3], CJ4_FMC_PilotWaypointParser.getIndexedName(fmc.flightPlanManager.getWaypoint(referenceIndex).ident, fmc));\r\n                    const distance = parseFloat(matchAlongTrackOffset[2]);\r\n                    newWaypoint = {\r\n                        wpt: WaypointBuilder.fromPlaceAlongFlightPlan(ident, referenceIndex, distance, fmc, fmc.flightPlanManager),\r\n                        offset: distance\r\n                    };\r\n                }\r\n            }\r\n            return newWaypoint;\r\n        });\r\n    }\r\n    static parseInputLatLong(value, fmc) {\r\n        const matchFullLatLong = value.match(CJ4_FMC_PilotWaypointParser.fullLatLong);\r\n        const matchShorhandLatLongEnd = value.match(CJ4_FMC_PilotWaypointParser.shorhandLatLongEnd);\r\n        const matchShorthandLatLongMid = value.match(CJ4_FMC_PilotWaypointParser.shorthandLatLongMid);\r\n        let newWaypoint = undefined;\r\n        if (matchFullLatLong) {\r\n            newWaypoint = {\r\n                wpt: CJ4_FMC_PilotWaypointParser.parseFullLatLong(matchFullLatLong, fmc),\r\n                offset: false\r\n            };\r\n        }\r\n        else if (matchShorhandLatLongEnd) {\r\n            newWaypoint = {\r\n                wpt: CJ4_FMC_PilotWaypointParser.parseShorthandLatLongEnd(matchShorhandLatLongEnd, fmc),\r\n                offset: false\r\n            };\r\n        }\r\n        else if (matchShorthandLatLongMid) {\r\n            newWaypoint = {\r\n                wpt: CJ4_FMC_PilotWaypointParser.parseShorthandLatLongMid(matchShorthandLatLongMid, fmc),\r\n                offset: false\r\n            };\r\n        }\r\n        return newWaypoint;\r\n    }\r\n    static parseInputPlaceBearingDistance(value, fmc) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const matchPlaceBearingDistance = value.match(CJ4_FMC_PilotWaypointParser.placeBearingDistance);\r\n            let newWaypoint = undefined;\r\n            if (matchPlaceBearingDistance) {\r\n                const placeBearingWaypoint = yield CJ4_FMC_PilotWaypointParser.parsePlaceBearingDistance(matchPlaceBearingDistance, fmc);\r\n                if (placeBearingWaypoint) {\r\n                    newWaypoint = {\r\n                        wpt: placeBearingWaypoint,\r\n                        offset: false\r\n                    };\r\n                }\r\n            }\r\n            return newWaypoint;\r\n        });\r\n    }\r\n    static buildPilotWaypointFromExisting(ident, latitude, longitude, fmc) {\r\n        const coordinates = new LatLongAlt(latitude, longitude, 0);\r\n        const newWaypoint = WaypointBuilder.fromCoordinates(ident, coordinates, fmc);\r\n        return newWaypoint;\r\n    }\r\n    static parseFullLatLong(matchFullLatLong, fmc) {\r\n        console.log(\"match full lat long\");\r\n        // 1 = N/S\r\n        // 2 = LAT DEG\r\n        // 3 = LAT MINS\r\n        // 4 = E/W\r\n        // 5 = LONG DEG\r\n        // 6 = LONG MINS\r\n        // 7 = IDENT\r\n        if (matchFullLatLong[3].trim() === \"\") {\r\n            matchFullLatLong[3] = \"0\";\r\n        }\r\n        if (matchFullLatLong[6].trim() === \"\") {\r\n            matchFullLatLong[6] = \"0\";\r\n        }\r\n        const latitude = matchFullLatLong[1] == \"S\" ? 0 - parseInt(matchFullLatLong[2]) - (parseFloat(matchFullLatLong[3]) / 60)\r\n            : parseInt(matchFullLatLong[2]) + (parseFloat(matchFullLatLong[3]) / 60);\r\n        const longitude = matchFullLatLong[4] == \"W\" ? 0 - parseInt(matchFullLatLong[5]) - (parseFloat(matchFullLatLong[6]) / 60)\r\n            : parseInt(matchFullLatLong[5]) + (parseFloat(matchFullLatLong[6]) / 60);\r\n        const coordinates = new LatLongAlt(latitude, longitude, 0);\r\n        const ident = CJ4_FMC_PilotWaypointParser.procMatch(matchFullLatLong[7], matchFullLatLong[1] + matchFullLatLong[2].slice(0, 2) + matchFullLatLong[4] + matchFullLatLong[5] + matchFullLatLong[6].slice(0, 2));\r\n        return WaypointBuilder.fromCoordinates(ident, coordinates, fmc);\r\n    }\r\n    static parseShorthandLatLongEnd(matchShorthandLatLongEnd, fmc) {\r\n        // 1 = LAT DEG\r\n        // 2 = LONG DEG\r\n        // 3 = N/E/S/W (N = N:W; E = N:E; S = S:E; W = S:W)\r\n        const direction = matchShorthandLatLongEnd[3];\r\n        const latitude = direction == \"S\" || direction == \"W\" ? 0 - parseInt(matchShorthandLatLongEnd[1])\r\n            : parseInt(matchShorthandLatLongEnd[1]);\r\n        const longitude = direction == \"N\" || direction == \"W\" ? 0 - parseInt(matchShorthandLatLongEnd[2])\r\n            : parseInt(matchShorthandLatLongEnd[2]);\r\n        const coordinates = new LatLongAlt(latitude, longitude, 0);\r\n        const ident = matchShorthandLatLongEnd[1] + matchShorthandLatLongEnd[2] + direction;\r\n        return WaypointBuilder.fromCoordinates(ident, coordinates, fmc);\r\n    }\r\n    static parseShorthandLatLongMid(matchShorthandLatLongMid, fmc) {\r\n        // 1 = LAT DEG\r\n        // 2 = N/E/S/W (N = N:W; E = N:E; S = S:E; W = S:W)\r\n        // 3 = LONG DEG\r\n        const direction = matchShorthandLatLongMid[2];\r\n        const latitude = direction == \"S\" || direction == \"W\" ? 0 - parseInt(matchShorthandLatLongMid[1])\r\n            : parseInt(matchShorthandLatLongMid[1]);\r\n        const longitude = direction == \"N\" || direction == \"W\" ? 0 - 100 - parseInt(matchShorthandLatLongMid[3])\r\n            : 100 + parseInt(matchShorthandLatLongMid[3]);\r\n        const coordinates = new LatLongAlt(latitude, longitude, 0);\r\n        const ident = matchShorthandLatLongMid[1] + direction + matchShorthandLatLongMid[3];\r\n        return WaypointBuilder.fromCoordinates(ident, coordinates, fmc);\r\n    }\r\n    static parsePlaceBearingDistance(matchPlaceBearingDistance, fmc) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // 1 = Reference Ident\r\n            // 2 = Bearing from Reference\r\n            // 3 = Distance from Reference\r\n            // 4 = Ident\r\n            let referenceWaypoint = fmc.flightPlanManager.getAllWaypoints().find(x => x.ident === matchPlaceBearingDistance[1]);\r\n            if (referenceWaypoint === undefined) {\r\n                const getWpt = (refWpt) => {\r\n                    return new Promise(resolve => {\r\n                        fmc.getOrSelectWaypointByIdent(refWpt, (w) => resolve(w));\r\n                    });\r\n                };\r\n                referenceWaypoint = yield getWpt(matchPlaceBearingDistance[1]);\r\n            }\r\n            if (referenceWaypoint !== undefined) {\r\n                const referenceCoordinates = referenceWaypoint.infos.coordinates;\r\n                const bearing = parseInt(matchPlaceBearingDistance[2]);\r\n                const distance = parseFloat(matchPlaceBearingDistance[3]);\r\n                const ident = CJ4_FMC_PilotWaypointParser.procMatch(matchPlaceBearingDistance[4], CJ4_FMC_PilotWaypointParser.getIndexedName(referenceWaypoint.ident, fmc));\r\n                return WaypointBuilder.fromPlaceBearingDistance(ident, referenceCoordinates, bearing, distance, fmc);\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n        });\r\n    }\r\n    static procMatch(item, defaultVal) {\r\n        return (item === undefined) ? defaultVal : item;\r\n    }\r\n    static getIndexedName(ident, fmc) {\r\n        const waypoints = fmc.flightPlanManager.getAllWaypoints();\r\n        const identPrefix = ident.substr(0, 3);\r\n        let namingIndex;\r\n        let currentIndex = 1;\r\n        while (namingIndex === undefined) {\r\n            const currentName = `${identPrefix}${String(currentIndex).padStart(2, '0')}`;\r\n            const waypointIndex = waypoints.findIndex(x => x.ident === currentName);\r\n            if (waypointIndex === -1) {\r\n                return currentName;\r\n            }\r\n            else {\r\n                currentIndex++;\r\n            }\r\n        }\r\n    }\r\n}\r\nCJ4_FMC_PilotWaypointParser.fullLatLong = /([NS])([0-8][0-9])((?:[0-5][0-9])?(?:\\.\\d{1,2})?)([EW])((?:[0][0-9][0-9])|(?:[1][0-7][0-9]))((?:[0-5][0-9])?(?:\\.\\d{1,2})?)(?:\\/(\\w{0,5}))?/;\r\nCJ4_FMC_PilotWaypointParser.shorhandLatLongEnd = /([0-8][0-9])([0-9][0-9]|[1][0-8][0-9])([NSEW])/;\r\nCJ4_FMC_PilotWaypointParser.shorthandLatLongMid = /([0-8][0-9])([NSEW])([1][0-8][0-9]|[0-9][0-9])/;\r\nCJ4_FMC_PilotWaypointParser.placeBearingDistance = /(\\w{3,5})([0-3][0-9][0-9])\\/(\\d{1,3}(?:\\.\\d{1})?)(?:\\/(\\w{0,5}))?/;\r\nCJ4_FMC_PilotWaypointParser.alongTrackOffset = /(\\w{3,5})\\/(?:(-*\\d{0,3}\\.*\\d{0,1}))?(?:\\/(\\w{0,5}))?/;\r\n//# sourceMappingURL=CJ4_FMC_PilotWaypointParser.js.map","references":["D:/Documents/GitHub/boufogre/salty-747/src/fpm/src/flightplanning/WaypointBuilder.ts"],"map":"{\"version\":3,\"file\":\"CJ4_FMC_PilotWaypointParser.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/fpm/src/cj4/fmc/CJ4_FMC_PilotWaypointParser.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"D:/Documents/GitHub/boufogre/salty-747/src/fpm/dist/types/cj4/fmc/CJ4_FMC_PilotWaypointParser.d.ts","writeByteOrderMark":false,"text":"export interface ICustomWaypoint {\r\n    wpt: WayPoint;\r\n    offset: number;\r\n}\r\nexport declare class CJ4_FMC_PilotWaypointParser {\r\n    static readonly fullLatLong: RegExp;\r\n    static readonly shorhandLatLongEnd: RegExp;\r\n    static readonly shorthandLatLongMid: RegExp;\r\n    static readonly placeBearingDistance: RegExp;\r\n    static readonly alongTrackOffset: RegExp;\r\n    static parseInput(value: string, referenceIndex: number, fmc: FMCMainDisplay): Promise<ICustomWaypoint | undefined>;\r\n    static parseInputLatLong(value: string, fmc: FMCMainDisplay): WayPoint;\r\n    static parseInputPlaceBearingDistance(value: string, fmc: FMCMainDisplay): Promise<WayPoint>;\r\n    static buildPilotWaypointFromExisting(ident: string, latitude: number, longitude: number, fmc: FMCMainDisplay): WayPoint;\r\n    private static parseFullLatLong;\r\n    private static parseShorthandLatLongEnd;\r\n    private static parseShorthandLatLongMid;\r\n    private static parsePlaceBearingDistance;\r\n    private static procMatch;\r\n    private static getIndexedName;\r\n}\r\n"}}
