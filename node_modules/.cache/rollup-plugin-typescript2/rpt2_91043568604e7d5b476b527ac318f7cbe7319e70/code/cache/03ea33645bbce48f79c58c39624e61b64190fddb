{"code":"/**\r\n * A segment of a flight plan.\r\n */\r\nexport class FlightPlanSegment {\r\n    /**\r\n     * Creates a new FlightPlanSegment.\r\n     * @param type The type of the flight plan segment.\r\n     * @param offset The offset within the original flight plan that\r\n     * the segment starts at.\r\n     * @param waypoints The waypoints in the flight plan segment.\r\n     */\r\n    constructor(type, offset, waypoints) {\r\n        this.type = type;\r\n        this.offset = offset;\r\n        this.waypoints = waypoints;\r\n    }\r\n}\r\n/** An empty flight plan segment. */\r\nFlightPlanSegment.Empty = new FlightPlanSegment(-1, -1, []);\r\n/** Types of flight plan segments. */\r\nexport var SegmentType;\r\n(function (SegmentType) {\r\n    /** The origin airfield segment. */\r\n    SegmentType[SegmentType[\"Origin\"] = 0] = \"Origin\";\r\n    /** The departure segment. */\r\n    SegmentType[SegmentType[\"Departure\"] = 1] = \"Departure\";\r\n    /** The enroute segment. */\r\n    SegmentType[SegmentType[\"Enroute\"] = 2] = \"Enroute\";\r\n    /** The arrival segment. */\r\n    SegmentType[SegmentType[\"Arrival\"] = 3] = \"Arrival\";\r\n    /** The approach segment. */\r\n    SegmentType[SegmentType[\"Approach\"] = 4] = \"Approach\";\r\n    /** The missed approach segment. */\r\n    SegmentType[SegmentType[\"Missed\"] = 5] = \"Missed\";\r\n    /** The destination airfield segment. */\r\n    SegmentType[SegmentType[\"Destination\"] = 6] = \"Destination\";\r\n})(SegmentType || (SegmentType = {}));\r\n//# sourceMappingURL=FlightPlanSegment.js.map","references":[],"map":"{\"version\":3,\"file\":\"FlightPlanSegment.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/fpm/src/flightplanning/FlightPlanSegment.ts\"],\"names\":[],\"mappings\":\"AAAA;;GAEG;AACH,MAAM,OAAO,iBAAiB;IAE5B;;;;;;OAMG;IACH,YAAmB,IAAiB,EAAS,MAAc,EAAS,SAAqB;QAAtE,SAAI,GAAJ,IAAI,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,cAAS,GAAT,SAAS,CAAY;IACzF,CAAC;;AAED,oCAAoC;AACtB,uBAAK,GAAsB,IAAI,iBAAiB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAG7E,qCAAqC;AACrC,MAAM,CAAN,IAAY,WAsBX;AAtBD,WAAY,WAAW;IAErB,mCAAmC;IACnC,iDAAM,CAAA;IAEN,6BAA6B;IAC7B,uDAAS,CAAA;IAET,2BAA2B;IAC3B,mDAAO,CAAA;IAEP,2BAA2B;IAC3B,mDAAO,CAAA;IAEP,4BAA4B;IAC5B,qDAAQ,CAAA;IAER,mCAAmC;IACnC,iDAAM,CAAA;IAEN,wCAAwC;IACxC,2DAAW,CAAA;AACb,CAAC,EAtBW,WAAW,KAAX,WAAW,QAsBtB\"}","dts":{"name":"D:/Documents/GitHub/boufogre/salty-747/src/fpm/dist/types/flightplanning/FlightPlanSegment.d.ts","writeByteOrderMark":false,"text":"/**\r\n * A segment of a flight plan.\r\n */\r\nexport declare class FlightPlanSegment {\r\n    type: SegmentType;\r\n    offset: number;\r\n    waypoints: WayPoint[];\r\n    /**\r\n     * Creates a new FlightPlanSegment.\r\n     * @param type The type of the flight plan segment.\r\n     * @param offset The offset within the original flight plan that\r\n     * the segment starts at.\r\n     * @param waypoints The waypoints in the flight plan segment.\r\n     */\r\n    constructor(type: SegmentType, offset: number, waypoints: WayPoint[]);\r\n    /** An empty flight plan segment. */\r\n    static Empty: FlightPlanSegment;\r\n}\r\n/** Types of flight plan segments. */\r\nexport declare enum SegmentType {\r\n    /** The origin airfield segment. */\r\n    Origin = 0,\r\n    /** The departure segment. */\r\n    Departure = 1,\r\n    /** The enroute segment. */\r\n    Enroute = 2,\r\n    /** The arrival segment. */\r\n    Arrival = 3,\r\n    /** The approach segment. */\r\n    Approach = 4,\r\n    /** The missed approach segment. */\r\n    Missed = 5,\r\n    /** The destination airfield segment. */\r\n    Destination = 6\r\n}\r\n"}}
